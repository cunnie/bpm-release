load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "ioctl.go",
            "pty_unsupported.go",
            "run.go",
            "util.go",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "ioctl.go",
            "ioctl_bsd.go",
            "pty_darwin.go",
            "run.go",
            "util.go",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "ioctl.go",
            "ioctl_bsd.go",
            "pty_dragonfly.go",
            "run.go",
            "util.go",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "ioctl.go",
            "ioctl_bsd.go",
            "pty_freebsd.go",
            "run.go",
            "util.go",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "ioctl.go",
            "pty_linux.go",
            "run.go",
            "util.go",
        ],
        "@io_bazel_rules_go//go/platform:nacl": [
            "ioctl.go",
            "pty_unsupported.go",
            "run.go",
            "util.go",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "ioctl.go",
            "ioctl_bsd.go",
            "pty_unsupported.go",
            "run.go",
            "util.go",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "ioctl.go",
            "ioctl_bsd.go",
            "pty_openbsd.go",
            "run.go",
            "util.go",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "ioctl.go",
            "pty_unsupported.go",
            "run.go",
            "util.go",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "ioctl.go",
            "pty_unsupported.go",
            "run.go",
            "util.go",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "pty_unsupported.go",
        ],
        "//conditions:default": [],
    }) + select({
        "@io_bazel_rules_go//go/platform:386": [
            "ztypes_386.go",
        ],
        "@io_bazel_rules_go//go/platform:amd64": [
            "ztypes_amd64.go",
        ],
        "@io_bazel_rules_go//go/platform:arm": [
            "ztypes_arm.go",
        ],
        "@io_bazel_rules_go//go/platform:arm64": [
            "ztypes_arm64.go",
        ],
        "@io_bazel_rules_go//go/platform:ppc64": [
            "ztypes_ppc64.go",
        ],
        "@io_bazel_rules_go//go/platform:ppc64le": [
            "ztypes_ppc64le.go",
        ],
        "@io_bazel_rules_go//go/platform:s390x": [
            "ztypes_s390x.go",
        ],
        "//conditions:default": [],
    }) + select({
        "@io_bazel_rules_go//go/platform:dragonfly_amd64": [
            "ztypes_dragonfly_amd64.go",
        ],
        "@io_bazel_rules_go//go/platform:freebsd_386": [
            "ztypes_freebsd_386.go",
        ],
        "@io_bazel_rules_go//go/platform:freebsd_amd64": [
            "ztypes_freebsd_amd64.go",
        ],
        "@io_bazel_rules_go//go/platform:freebsd_arm": [
            "ztypes_freebsd_arm.go",
        ],
        "@io_bazel_rules_go//go/platform:linux_mips": [
            "ztypes_mipsx.go",
        ],
        "@io_bazel_rules_go//go/platform:linux_mips64": [
            "ztypes_mipsx.go",
        ],
        "@io_bazel_rules_go//go/platform:linux_mips64le": [
            "ztypes_mipsx.go",
        ],
        "@io_bazel_rules_go//go/platform:linux_mipsle": [
            "ztypes_mipsx.go",
        ],
        "@io_bazel_rules_go//go/platform:openbsd_amd64": [
            "ztypes_openbsd_amd64.go",
        ],
        "//conditions:default": [],
    }),
    cgo = True,
    importpath = "github.com/kr/pty",
    visibility = ["//visibility:public"],
)
